/** @jsx React.DOM */

// Stub out the dependencies. These are all filled by stuff in the
// heracles_admin engine.
//= stub lodash
//= stub jquery
//= stub react
//= stub select2
//= stub heracles/admin/components/available_insertables

(function() {

  var FLARUM_AUTH_TOKEN = '<%= ENV["FLARUM_AUTH_TOKEN"] %>';

  /**
   * Insertable display class
   * Exists _inside_ the TinyMCE iframe we render for ContentFields
   *
   */

  var InsertableFlarumDiscussionDisplay = React.createClass({

    mixins: [InsertableDisplayMixin],

    render: function() {
      return (
        <div className="insertable-display insertable-display-pages" contentEditable="false">
          <div className="insertable-display-pages__details">
            <div className="insertable-display-pages__controls">
              <div className="button-group">
                <button className="button insertable-display__edit button button--soft" onClick={this.editValue}>
                  Edit discussion
                </button>
                <button className="button insertable-display__remove button button--soft" onClick={this.remove}>
                  <i className="fa fa-times"/>
                </button>
              </div>
            </div>
          </div>
        </div>
      );
    },

  });


  /**
   * Format the discussions for the Select2
   * @param  {Object} discussion As returned by the Flarum API
   * @return {String}            A string of HTML
   */
  function formatDiscussions(discussion) {
    return (
      "<div class=\"select2-result__primary\">\n  " + discussion.attributes.title + "<span class=\"field-mono\">(?)</span>\n</div>"
    )
  }


  /**
   * Insertable edit class
   * Rendered into the sidebar
   *
   * Expected `state.value`:
   *    page_ids: []
   *    display_as: "grid/list/"
   *    display_position: "left/right/full-width"
   */

  var InsertableFlarumDiscussionEdit = React.createClass({

    /**
     * Mixin the global-Heracles InsertableEditMixin. This is React's (old)
     * method for sharing common methods and properties between components.
     */
    mixins: [InsertableEditMixin],

    componentDidMount: function() {
      // var discussionEl = this.refs.getDOMNode();
    },

    render: function() {
      return (
        <div className="insertable-edit fields--reversed">
          <form onSubmit={this.onSubmit}>
            <h2 className="insertable-edit__title">Edit insertable events</h2>
            <div className="field">
              <div className="field-header">
                <label className="field-label" htmlFor="edit__caption">Events</label>
              </div>
              <div className="field-main">
                <input className="field-select2 field-addon-input" type="hidden" ref="discussion"/>
                <input ref="discussion_id" id="edit__discussion-id" className="field-text-input" value={this.state.value.discussion_id} onChange={this.handleChange.bind(this, "discussion_id")} placeholder="Discussion ID"/>
              </div>
            </div>
            <div className="field">
              <div className="field-header">
                <label className="field-label" htmlFor="edit__title">Title</label>
              </div>
              <div className="field-main">
                <input ref="title" id="edit__title" className="field-text-input" value={this.state.value.title} onChange={this.handleChange.bind(this, "title")} placeholder="Title"/>
              </div>
            </div>
            <div className="field">
              <div className="field-header">
                <label className="field-label" htmlFor="edit__max_height">Max-height (in pixels)</label>
              </div>
              <div className="field-main">
                <input ref="max_height" id="edit__max_height" className="field-text-input" type="number" value={this.state.value.max_height} onChange={this.handleChange.bind(this, "max_height")} placeholder="Maximum height"/>
              </div>
            </div>
            <button type="submit" className="button button--highlight">Save changes to events insertable</button>
          </form>
        </div>
      );
    },

    /**
     * Handle changing data from the form into the `state` object
     * @param  {String} property The property on `state` to change the value of.
     * @param  {Event} e         The event object from React.
     */
    handleChange: function(property, e) {
      this.state.value[property] = e.target.value;
      this.setState({value: this.state.value});
    }

  });


  /**
   * Register the insertable in the HeraclesAdmin global
   */

  HeraclesAdmin.availableInsertables.add({
    type:    "flarum_discussion",
    label:   "Discussion",
    icon:    "comments",
    display: InsertableFlarumDiscussionDisplay,
    edit:    InsertableFlarumDiscussionEdit
  });

}).call(this);
