- by_letter = params[:letter].present? || false
- order_by = params[:order_by].presence || "last_name"

= area :masthead_title do
  .page__title.page__title--events
    h1.title People

= area :masthead_contextual_navigation do
  ul.masthead-contextual__navigation-list
      li.masthead-contextual__navigation-item
        a.masthead-contextual__navigation-anchor.masthead-contextual__navigation-anchor--active href="/people"
          ' All people

= area :main do
  .page__content
    .page__body.page__body--people
      .column-wrapper
        .column-wide
          / Stinky action differentiation
          / /people?letter=a
          / /people?letter=a&order_by=first_name
          - if by_letter
            = render "partials/people_by_letter_nav", page: page, order_by: order_by
            - people_by_letter = page.people(per_page: 1000, letter: params[:letter], order_by: order_by).results
            - if people_by_letter.any?
              .people-by-letter.gradient-top-down
                .people-by-letter__header
                  .people-by-letter__header-title
                    = params[:letter].capitalize
                  a.people-by-letter__header-anchor href="/people"
                    i.fa.fa-chevron-left
                    | Back to all people
                .people-by-letter__grid data-view-people-index-bio={peopleSelector: ".people-by-letter__intro span"}.to_json
                  .snap-wrapper.clearfix data-view-grouper={elementsSelector: ".snap-block", perGroup: { default: 8, "widescreen-wide" => 8, tablet: 5, "phone-wide" => 2, phone: 1 }}.to_json
                    - people_by_letter.each do |person|
                      .snap-block.people-by-letter__block
                        a.people-by-letter__anchor.clearfix href=person.absolute_url
                          - if person.fields[:portrait].data_present?
                            .people-by-letter__image-wrapper
                              img.people-by-letter__image src=person.fields[:portrait].asset.content_thumbnail_url alt="Portrait of #{person.title}"
                          - else
                            .people-by-letter__image-wrapper
                              span.people-by-letter__image.people-by-letter__image--blank
                          h3.people-by-letter__title = person.title
                          .people-by-letter__intro.copy
                            span= force_excerptify_html render_content(person.fields[:intro]), 200, "i em strong"
          / People index page
          / /people
          - else
            = render "partials/people_by_letter_nav", page: page, order_by: order_by
            - people_from_upcoming_events = page.people_from_upcoming_events
            - if people_from_upcoming_events.any?
              .people__coming-up-header.gradient-top-down
                h2.people__coming-up-title Coming up at The Wheeler Centre
                - if page.fields[:coming_up_intro].data_present?
                  .intro.intro--small.column-narrow.copy
                    = render_content page.fields[:coming_up_intro]
              .upcoming-people data-view-people-index-bio={peopleSelector: ".upcoming-people__intro span"}.to_json
                .snap-wrapper.clearfix data-view-grouper={elementsSelector: ".snap-block", perGroup: { default: 6, "widescreen-wide" => 6, tablet: 4, "phone-wide" => 2, phone: 1 }}.to_json
                  - people_from_upcoming_events.each do |person|
                    .snap-block.upcoming-people__block
                      a.upcoming-people__anchor.clearfix href=person.absolute_url
                        - if person.fields[:portrait].data_present?
                          .upcoming-people__image-wrapper
                            img.upcoming-people__image src=person.fields[:portrait].asset.content_thumbnail_url alt="Portrait of #{person.title}"
                        - else
                          .upcoming-people__image-wrapper
                            span.upcoming-people__image.upcoming-people__image--blank
                        h3.upcoming-people__title = person.title
                        .upcoming-people__intro.copy
                          span= force_excerptify_html render_content(person.fields[:intro]), 200, "i em strong"
            - people_from_recent_events = page.people_from_recent_events
            - if people_from_recent_events.any?
              .people__recently-at-header.gradient-top-down
                h2.people__recently-at-title Recently at The Wheeler Centre
              .recent-people data-view-people-index-bio={peopleSelector: ".recent-people__intro span"}.to_json
                .snap-wrapper.clearfix data-view-grouper={elementsSelector: ".snap-block", perGroup: { default: 8, "widescreen-wide" => 8, tablet: 5, "phone-wide" => 2, phone: 1 }}.to_json
                  - people_from_recent_events.each do |person|
                    .snap-block.recent-people__block
                      a.recent-people__anchor.clearfix href=person.absolute_url
                        - if person.fields[:portrait].data_present?
                          .recent-people__image-wrapper
                            img.recent-people__image src=person.fields[:portrait].asset.content_thumbnail_url alt="Portrait of #{person.title}"
                        - else
                          .recent-people__image-wrapper
                            span.recent-people__image.recent-people__image--blank
                        h3.recent-people__title = person.title
                        .recent-people__intro.copy
                          span= force_excerptify_html render_content(person.fields[:intro]), 200, "i em strong"
