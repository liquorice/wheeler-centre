- by_letter = params[:letter].present? || false
- order_by = params[:order_by].presence || "last_name"

= area :masthead_title do
  ' People

= area :masthead_contextual_navigation do
  ul.masthead-contextual__navigation-list
      li.masthead-contextual__navigation-item
        a.masthead-contextual__navigation-anchor.masthead-contextual__navigation-anchor--active href="/people"
          ' All people

= area :main do
  .page__content
    .page__body.page__body--people
      / Stinky action differentiation
      / /people?letter=a
      / /people?letter=a&order_by=first_name
      - if by_letter
        .column-wrapper
          .column-wide
            = render "partials/people_by_letter_nav", page: page, order_by: order_by
            - people_by_letter = page.people(per_page: 1000, letter: params[:letter], order_by: order_by).results
        - cache ["people-by-letter-2", people_by_letter, params[:letter]] do
          - if people_by_letter.present?
            .column-wrapper
              .column-full
                .people-by-letter.gradient-top-down
                  .people-by-letter__header
                    .people-by-letter__header-title
                      = params[:letter].capitalize
                    a.people-by-letter__header-anchor href="/people"
                      i.fa.fa-chevron-left
                      | Back to all people
                  .people-by-letter__grid data-view-people-index-bio={peopleSelector: ".people-by-letter__intro span"}.to_json
                    .snap-wrapper.clearfix data-view-grouper={elementsSelector: ".snap-block", perGroup: { default: 6, "widescreen-wide" => 8, tablet: 4, "phone-wide" => 2, phone: 1 }}.to_json
                      - people_by_letter.each do |person|
                        - image = person.fields[:portrait].asset
                        - cache ["people-person-by-letter-1", person, image, person.all_events.length] do
                          .snap-block.person-summary__block.people-by-letter__block
                            a.person-summary__anchor.people-by-letter__anchor.clearfix href=person.absolute_url
                              - if person.fields[:portrait].data_present?
                                .person-summary__block__image-wrapper.people-by-letter__image-wrapper
                                  img.person-summary__image.people-by-letter__image src=image.content_thumbnail_url alt="Portrait of #{person.title}"
                              - else
                                .person-summary__image-wrapper.people-by-letter__image-wrapper
                                  span.person-summary__image.person-summary__image--blank.people-by-letter__image.people-by-letter__image--blank
                              h3.people-by-letter__title = person.title
                              - if person.fields[:is_staff_member].value
                                span.person-summary__byline.people-by-letter__byline
                                  | Staff member
                              - if person.all_events.length > 0
                                span.person-summary__byline.person-summary__byline--events.people-by-letter__byline.people-by-letter__byline--events
                                  = person.all_events.length
                                  |&nbsp;event<em class="people-by-letter__byline--#{person.all_events.length}">s</em>
                              .person-summary__intro.people-by-letter__intro.copy
                                span= force_excerptify_html render_content(person.fields[:intro]), 30, "i em strong"
      / People index page
      / /people
      - else
        .column-wrapper
          .column-wide
            = render "partials/people_by_letter_nav", page: page, order_by: order_by
            - people_from_upcoming_events = page.people_from_upcoming_events
            - if people_from_upcoming_events.present?
              .people__coming-up-header.gradient-top-down
                h2.people__coming-up-title Coming up at The Wheeler Centre
                - if page.fields[:coming_up_intro].data_present?
                  .intro.intro--small.column-narrow.copy
                    = render_content page.fields[:coming_up_intro]
              .upcoming-people data-view-people-index-bio={peopleSelector: ".upcoming-people__intro span"}.to_json
                .snap-wrapper.clearfix data-view-grouper={elementsSelector: ".snap-block", perGroup: { default: 6, "widescreen-wide" => 6, tablet: 4, "phone-wide" => 2, phone: 1 }}.to_json
                  - people_from_upcoming_events.each do |person|
                    - image = person.fields[:portrait].asset
                    - cache ["people-person-upcoming-2", person, image] do
                      .snap-block.person-summary__block.upcoming-people__block
                        a.person-summary__anchor.upcoming-people__anchor.clearfix href=person.absolute_url
                          - if person.fields[:portrait].data_present?
                            .person-summary__image-wrapper.upcoming-people__image-wrapper
                              img.person-summary__image.upcoming-people__image src=image.content_thumbnail_url alt="Portrait of #{person.title}"
                          - else
                            .person-summary__image-wrapper.upcoming-people__image-wrapper
                              span.person-summary__image.upcoming-people__image.person-summary__image--blank.upcoming-people__image--blank
                          h3.person-summary__title.upcoming-people__title = person.title
                          .person-summary__intro.upcoming-people__intro.copy
                            span= force_excerptify_html render_content(person.fields[:intro]), 30, "i em strong"
        .column-wrapper
          .column-full
            - people_from_recent_events = page.people_from_recent_events
            - if people_from_recent_events.present?
              .people__recently-at-header.gradient-top-down
                h2.people__recently-at-title Recently at The Wheeler Centre
              .recent-people data-view-people-index-bio={peopleSelector: ".recent-people__intro span"}.to_json
                .snap-wrapper.clearfix data-view-grouper={elementsSelector: ".snap-block", perGroup: { default: 6, "widescreen-wide" => 8, tablet: 4, "phone-wide" => 2, phone: 1 }}.to_json
                  - people_from_recent_events.each do |person|
                    - image = person.fields[:portrait].asset
                    - cache ["people-person-recent-1", person, image] do
                      .snap-block.person-summary__block.recent-people__block
                        a.person-summary__anchor.recent-people__anchor.clearfix href=person.absolute_url
                          - if person.fields[:portrait].data_present?
                            .person-summary__image-wrapper.recent-people__image-wrapper
                              img.person-summary__image.recent-people__image src=image.content_thumbnail_url alt="Portrait of #{person.title}"
                          - else
                            .person-summary__image-wrapper.recent-people__image-wrapper
                              span.person-summary__image.person-summary__image--blank.recent-people__image.recent-people__image--blank
                          h3.person-summary__title.recent-people__title = person.title
                          .person-summary__intro.recent-people__intro.copy
                            span= force_excerptify_html render_content(person.fields[:intro]), 30, "i em strong"
