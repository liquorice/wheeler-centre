/ Custom meta data
- series = page.series
- open_graph_image = series.fields[:hero_image].asset if series.fields[:hero_image].present?
- open_graph_summary = strip_html(render_content(page.fields[:body]), "")
- if open_graph_image.present?
  - set_meta_tags({ \
      title: page_title_for_podcast(page), \
      description: open_graph_summary, \
      og: { \
        description: open_graph_summary,
        image: { \
          url: (open_graph_image.content_medium_url if open_graph_image), \
          secure_url: (open_graph_image.results[:content_medium][:ssl_url] if open_graph_image), \
          width: (open_graph_image.results[:content_medium][:meta][:width] if open_graph_image), \
          height: (open_graph_image.results[:content_medium][:meta][:height] if open_graph_image), \
        } \
      } \
    })


= area :head do
  link href=podcast_tracking_link(page.series) rel="alternate" title="#{page.parent.title} podcast" type="application/rss+xml"

= area :masthead_title do
  == markdown_line broadcasts_page.title

= area :masthead_contextual_navigation do
  - pages = [broadcasts_page] + broadcasts_page.children.in_order.visible.published.where(collection_id: nil)
  = render "partials/masthead_contextual_navigation", pages: pages, current: page

= area :main do

  .podcast-episode
    - cache ["podcast-series-intro-1", page, page.series] do
      - if page.series
        - highlight_color = page.series.fields[:highlight_colour].value if page.series.fields[:highlight_colour].data_present? && valid_hex_color(page.series.fields[:highlight_colour].value)
        a.podcast-episode__series-header.column-wrapper href="#{page.series.absolute_url}?show_all=true" style=style_for_event_series_block(highlight_color)
          .column-full.clearfix
            .podcast-episode__series-header-inner
              p.podcast-episode__series-meta Part of a podcast series
              p.podcast-episode__series-title = page.series.title
              p.podcast-episode__series-call-to-action
                | <em><span>View</span> all <span>episodes</span> in this series</em>
                i.fa.fa-chevron-right
    .podcast-episode__header.column-wrapper
      .column-wide
        p.podcast-episode__byline
          ' An episode of
          a href= page.series.absolute_url
            = page.series.title
          - if page.fields[:publish_date].data_present?
            span.podcast-episode__byline-separator ·
            ' Published on
            = page.fields[:publish_date]
          - if page.fields[:explicit].value
            span.podcast-episode__byline-separator ·
            span.podcast-episode__byline-explicit
              ' Explicit
        h1.podcast-episode__title= page.title

    .podcast-episode__body.column-wrapper
      - cache ["podcast-audio-1", page, page.fields[:audio].asset] do
        - if page.fields[:audio].data_present?
          .recording__audio.recording__audio-podcast
            = render "partials/audio", audio: page.fields[:audio], title: "Listen to #{page.title}", tracking_event_label: "#{page.series.title}, #{page.title}"
          - asset = page.fields[:audio].asset
          - if asset.versions.include?(:audio_mp3)
            .recording__downloads-podcast
              ul
                li
                  - mp3_tracking_url = track_event(asset.audio_mp3_url, { \
                    title: asset.title || asset.file_name, \
                    event_category: "podcast", \
                    event_action: "download" \
                    event_label: "#{page.series.title}, #{page.title}, #{url_basename(asset.audio_mp3_url)}", \
                  })
                  a href=mp3_tracking_url
                    i.fa.fa-music
                    ' Download audio file
                li
                a href="#subscribe"
                  i.fa.fa-rss
                  ' Subscribe to podcast

      = render_content_in_sections page.fields[:description]

    - cache ["podcast-episode-comments-1", page.fields[:flarum_discussion_id]] do
      - if page.fields[:flarum_discussion_id].data_present?
        .podcast-episode__comments.column-wrapper
          .column-mid.clearfix
            = render partial: "partials/flarum_discussion", locals: {flarum_discussion_id: page.fields[:flarum_discussion_id].value }

    = render "partials/podcast_series_subscribe", page: page.series

    = render "partials/podcast_series_header", page: page.series, context: "episode"
