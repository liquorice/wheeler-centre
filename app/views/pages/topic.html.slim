- random_pages = page.random_pages(page_number: params[:page], per_page: params[:per_page])
- latest_pages = page.latest_pages


= area :masthead_title do
  .page__title.page__title--events
    h1.title Topics

= area :main do
  .topic-page
    .topic-page__header
      p.topic-page__title-label
        ' Topic
      h1.topic-page__title
        = page.title

    - if page.fields[:intro].data_present?
      .page__intro.intro.column-wrapper
        .column-narrow.copy
          = render_content page.fields[:intro]
    - unless params[:page]
      .topic-page__latest.column-wrapper
        .column-wide.clearfix
          .topic-page__nav
            = render "partials/page_children", parent: primary_topic_for_topic(page), current: page
          .blog-snap__group
            - latest_pages.each do |post|
              - if post.page_type == "blog_post"
                = render "partials/blog_snap_quarter", post: post
              - elsif post.page_type == "event"
                = render "partials/event_snap_quarter", post: post
    .column-wrapper
      - if params[:page]
        .pagination-top
          = paginate random_pages
        .pagination-context.pagination-context--top
          ' Page
          = (params[:page] || 1)
          em &nbsp;of&nbsp;
          = random_pages.total_pages
      .topic-page__random.clearfix
        - random_pages.each do |post|
          - if post.page_type == "blog_post"
            = render "partials/blog_snap_block", post: post, show_type: true
          - elsif post.page_type == "event"
            = render "partials/event_snap_block", post: post, show_type: true
      .pagination-context.pagination-context--bottom
        ' Page
        = (params[:page] || 1)
        em &nbsp;of&nbsp;
        = random_pages.total_pages
      .pagination-bottom
        = paginate random_pages
