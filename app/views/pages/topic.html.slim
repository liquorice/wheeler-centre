- random_pages = page.random_pages(page_number: params[:page], per_page: params[:per_page])
- latest_pages = page.latest_pages
- primary_topic = primary_topic_for_topic(page)

= area :masthead_title do
  .page__title.page__title--events
    h1.title Topics

= area :main do
  .topic-page
    .column-wrapper.topic-page__header
      .topic-page__nav[
        data-view-nav-toggle={toggleSelector: ".topic-page__nav-label", targetSelector: ".topic-page__nav-inner", targetActiveClassName: "topic-page__nav-inner--active"}.to_json
        ]
        .topic-page__nav-inner data-view-touch-preview={previewClassName: "topic-page__nav-inner--hover"}.to_json
          p.topic-page__nav-label
            - if primary_topic.id == page.id
              ' View topics under
              = primary_topic.title
            - else
              ' More in
              = primary_topic.title
            i.fa.fa-angle-down
            i.fa.fa-angle-up
          .topic-page__nav-list
            h3.topic-page__nav-title
              a href=primary_topic.absolute_url = primary_topic.title
            = render "partials/page_nav_children", parent: primary_topic, current: page
      h1.topic-page__title
        = page.title
    - if page.fields[:intro].data_present?
      .page__intro.intro.column-wrapper
        .column-narrow.copy
          = render_content page.fields[:intro]
    - unless params[:page] || random_pages.total_pages == 1
      .topic-page__latest.column-wrapper
        h2.blog-index__latest-header Latest
        .column-wide.clearfix
          .snap-uneven.snap-wrapper.clearfix data-view-grouper={elementsSelector: ".snap-block", fillGroups: true, perGroup: { default: 3, phone: 2 }}.to_json
            - latest_pages.each do |post|
              - if post.page_type == "blog_post"
                = render "partials/blog_snap_block", post: post, show_type: true, aspect: :landscape, show_summary: true
              - elsif post.page_type == "event"
                = render "partials/event_snap_block", post: post, show_type: true, aspect: :landscape, show_summary: true
              - elsif post.page_type == "recording"
                = render "partials/recording_snap_block", post: post, show_type: true, aspect: :landscape, show_summary: true
              - elsif post.page_type == "person"
                = render "partials/person_snap_block", post: post, show_type: true, aspect: :landscape, show_summary: true
              - elsif post.page_type == "podcast_episode"
                = render "partials/podcast_episode_snap_block", post: post, show_type: true, aspect: :landscape, show_summary: true
    .column-wrapper
      .topic-page__random-intro.intro
        .column-narrow.copy
          p Anything and everything in <em>#{page.title}</em> from across our archives.
      .column-full
        - if random_pages.total_pages > 1
          .pagination-top
            = paginate random_pages, outer_window: 4
          .pagination-context.pagination-context--top
            ' Page
            = (params[:page] || 1)
            em &nbsp;of&nbsp;
            = random_pages.total_pages
        .topic-page__random.snap-wrapper.clearfix data-view-grouper={elementsSelector: ".snap-block", perGroup: { default: 4, "widescreen-wide" => 6, widescreen: 5, tablet: 3, "phone-wide" => 3, phone: 2 }}.to_json
          - random_pages.each do |post|
            - if post.page_type == "blog_post"
              = render "partials/blog_snap_block", post: post, show_type: true
            - elsif post.page_type == "event"
              = render "partials/event_snap_block", post: post, show_type: true
            - elsif post.page_type == "recording"
              = render "partials/recording_snap_block", post: post, show_type: true
            - elsif post.page_type == "person"
              = render "partials/person_snap_block", post: post, show_type: true
            - elsif post.page_type == "podcast_episode"
              = render "partials/podcast_episode_snap_block", post: post, show_type: true
            - else
              / TODO Need types for: person, podcast_episode
              .snap-block
                = post.title
                '  â€”
                = post.page_type
        - if random_pages.total_pages > 1
          .pagination-context.pagination-context--bottom
            ' Page
            = (params[:page] || 1)
            em &nbsp;of&nbsp;
            = random_pages.total_pages
          .pagination-bottom
            = paginate random_pages, outer_window: 4
    = render "partials/topics_section", intro: "Explore the other areas of interest across our site."
