- posts = page.posts(per_page: 6)
- blog_archive_rss_tracking_link = track_event("#{url_with_domain(blog_archive_page.absolute_url)}.rss", { \
  category: "rss", \
  action: "subscribe", \
  title: "RSS: #{blog_archive_page.title}" \
})

= area :head do
  link href=blog_archive_rss_tracking_link rel="alternate" title="Notes from The Wheeler Centre" type="application/rss+xml"

= area :masthead_title do
  = blog_page.title

= area :masthead_contextual_navigation do
  - pages = [longform_blog_page] + longform_blog_page.children.in_order.visible.published.where(collection_id: nil)
  = render "partials/masthead_contextual_navigation", pages: pages, current: page

/ = area :masthead_contextual_navigation do
/   - pages = [page] + page.children.in_order.visible.published.where(collection_id: nil)
/   = render "partials/masthead_contextual_navigation", pages: pages, current: page

= area :main do
  .blog-index
    - cache ["longform-blog-edition-interview", page] do
      - if page.fields[:interview].data_present?
        .intro.blog-index__intro.column-wrapper
          .column-narrow.copy
            = render_content page.fields[:interview]
    .blog-index__latest.column-wrapper
      h2.blog-index__latest-header Latest notes
      - if posts.present?
        .column-wide
          .snap-uneven.snap-wrapper.clearfix data-view-grouper={elementsSelector: ".snap-block", fillGroups: true, perGroup: { default: 3, phone: 2 }}.to_json
            - posts.each do |post|
              = render "partials/blog_snap_block", post: post, show_type: false, aspect: :landscape, show_summary: true
          a.block-link.blog-index__latest-more href=blog_archive_page.absolute_url There are more notes over here on page two &#8230; &rsaquo;

    / Content area
    - cache ["longform-blog-edition-editorial", page] do
      - if page.fields[:editorial].data_present?
        .content-block
          = render_content_in_sections page.fields[:editorial]

    / Content area
    - cache ["longform-blog-edition-quotes", page] do
      - if page.fields[:quotes].data_present?
        .content-block
          = render_content_in_sections page.fields[:quotes]
