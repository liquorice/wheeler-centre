/ Custom meta data
- open_graph_image = page.promo_image
- open_graph_summary = strip_html(render_content(page.fields[:body]), "")
- set_meta_tags({ \
    title: page_title_for_event(page), \
    description: open_graph_summary, \
    og: { \
      title: "Event â€“ #{page.title}",
      description: open_graph_summary,
    } \
  })

- if open_graph_image.present?
  - set_meta_tags({ \
      og: { \
        image: { \
          url: (open_graph_image.content_medium_url if open_graph_image), \
          secure_url: (open_graph_image.processed_asset.data["versions"]["content_medium"].first["ssl_url"] if open_graph_image), \
          width: (open_graph_image.processed_asset.data["versions"]["content_medium"].first["meta"]["width"] if open_graph_image), \
          height: (open_graph_image.processed_asset.data["versions"]["content_medium"].first["meta"]["height"] if open_graph_image), \
        } \
      } \
    })

  / Set twitter:image
  - set_meta_tags({ \
      twitter: { \
        image: (open_graph_image.content_medium_url if open_graph_image), \
      } \
    })

- events_rss_tracking_link = track_event("#{url_with_domain(events_page.absolute_url)}.rss", { \
  category: "rss", \
  action: "subscribe", \
  title: "RSS: #{events_page.title}" \
})

- event_ics_tracking_link = track_event("#{url_with_domain(page.absolute_url)}.ics", { \
  category: "ics", \
  action: "subscribe", \
  title: "ICS: #{events_page.title}" \
})

= area :head do
  link href=events_rss_tracking_link rel="alternate" title="Events from The Wheeler Centre" type="application/rss+xml"

= area :masthead_title do

  ' Events

= area :masthead_contextual_navigation do

  - pages = [events_page] + events_page.children.in_order.visible.published.where(collection_id: nil)
  = render "partials/masthead_contextual_navigation", pages: pages, current: page, with_domain: false

= area :main do

  .event data-view-event=true itemscope=true itemtype="http://data-vocabulary.org/Event"
    - cache ["event-intro-1", page, page.recordings, page.podcast_episodes] do
      - unless page.upcoming?
        .intro.event__intro.column-wrapper.gradient-bottom-up
          .column-narrow.copy
            - if page.fields[:ticketing_stage].value == "Cancelled"
              p This event was cancelled.
            - else
              p
                - page.fields[:start_date].data_present?
                  ' This is an event from
                  em = time_ago_in_words page.fields[:start_date].value_in_time_zone
                  '  ago.
                - if page.recordings.any?
                  / Show a link to the single recording
                  - if page.recordings.length == 1
                    ' If you missed it, you can catch up on
                    a href=page.recordings.first.absolute_url
                      | this recording
                    - unless page.podcast_episodes.any?
                      ' .
                    - else
                      '
                  / Concat a list of recordings
                  - else
                    ' If you missed it, you can catch up on these recordings:
                    - page.recordings.each_with_index do |recording, index|
                      - if page.series
                        / Try and strip the series title from the recordings
                        a href=recording.absolute_url = recording.title.gsub(/#{page.series.title}\:/, '')
                      - else
                        a href=recording.absolute_url
                          = recording.title.gsub(/#{page.title}\:/, '')
                      - if index == page.recordings.length - 1
                        - unless page.podcast_episodes.any?
                          ' .
                        - else
                          '
                      - else
                        ',
                - if page.podcast_episodes.any?
                  / Show a link to the single recording
                  - if page.podcast_episodes.length == 1
                    - if page.recordings.any?
                      ' or you can listen to
                    - else
                      ' If you missed it, you can catch up on
                    a href=page.podcast_episodes.first.absolute_url
                      | this podcast
                    ' .
                  / Concat a list of recordings
                  - else
                    - if page.recordings.any?
                      ' or you can listen to these recordings:
                    - else
                      ' If you missed it, you can catch up on these recordings:
                    - page.podcast_episodes.each_with_index do |podcast, index|
                      - if page.series
                        / Try and strip the series title from the podcasts
                        a href=podcast.absolute_url = podcast.title.gsub(/#{page.series.title}\:/, '')
                      - else
                        a href=podcast.absolute_url
                          = podcast.title.gsub(/#{page.title}\:/, '')
                      - if index == page.podcast_episodes.length - 1
                        ' .
                      - else
                        ',
    - cache ["event-series-intro-1", page, page.series] do
      - if page.series
        - highlight_color = page.series.fields[:highlight_colour].value if page.series.fields[:highlight_colour].data_present? && valid_hex_color(page.series.fields[:highlight_colour].value)
        a.event__series-header.column-wrapper href=page.series.absolute_url style=style_for_event_series_block(highlight_color)
          .column-full.clearfix
            .event__series-header-inner
              p.event__series-meta Series
              p.event__series-title = page.series.title
              p.event__series-call-to-action
                | <em><span>View</span> all <span>events</span> in this series</em>
                i.fa.fa-chevron-right
    - cache ["event-promo-1", page, page.promo_image] do
      - if page.promo_image
        .event__promo-image
          picture
            erb:
              <!--[if IE 9]><video style="display: none;"><![endif]-->
            source srcset=page.promo_image.content_medium_url media="(min-width: 480px)"
            erb:
              <!--[if IE 9]></video><![endif]-->
            img.figure__content itemprop="photo" src=page.promo_image.content_small_url
            - if page.promo_image.attribution.present?
              .event__promo-image-caption.caption
                p = page.promo_image.attribution
    .column-wrapper
      .column-wide.clearfix
        - cache ["event-content-2", page] do
          .event__meta class=("event__meta--past" unless page.upcoming?)
            - if page.fields[:display_date].value.present?
              time.event__date-time itemprop="startDate" datetime=(l(page.fields[:start_date].value_in_time_zone, format: :rfc_3339) if page.fields[:start_date].data_present?)
                = page.fields[:display_date].value
            - else
              time.event__date-time itemprop="startDate" datetime=(l(page.fields[:start_date].value_in_time_zone, format: :rfc_3339) if page.fields[:start_date].data_present?)
                = format_date(page.fields[:start_date].value_in_time_zone, page.fields[:end_date].value_in_time_zone, format: "long_date")
            - if page.venue
              span.event__venue-name
                ' at
                a href=page.venue.absolute_url
                  == widont_format page.venue.title
            - if page.fields[:ticketing_stage].data_present? && !page.booked_out? && page.upcoming?
              span.event__ticketing-stage =page.fields[:ticketing_stage].value
            - unless page.fields[:ticketing_stage].value == "Cancelled"
              - if page.booked_out? && page.upcoming?
                span.event__booked-out-flag Booked out
              - elsif page.upcoming? && page.fields[:external_bookings].data_present? && bookings_open(page)
                - track_booking_url = track_event(page.booking_url, {\
                  category: "booking", \
                  action: "external - click",
                })
                a.event__tickets-booking.event__tickets-booking--small itemprop="offerurl" href=track_booking_url
                  ' Book now
            h1.event__title itemprop="summary"
              == widont_format markdown_line page.title
          .event__body itemprop="description"
            = render_content_in_sections page.fields[:body]

    .column-wrapper
      .column-wide.clearfix
        / Spit out all the topics
        - cache ["event-topics-1", page, page.fields[:topics].pages] do
          - if page.fields[:topics].data_present?
            .event__tags
              h2.event__tag-header Topics
              ul.event__tags-list
                - page.fields[:topics].pages.sort_by(&:title).each do |topic|
                  - cache ["event-topics-item-1", topic] do
                    li
                      a href=topic.absolute_url = topic.title
        - cache ["event-socal-icons-1", page, page.title] do
          .event__sharing
            = render "partials/social_sharing_icons", page: page
          .event__ics-download
            h2.event__ics-download-header
              ' Add to calendar
            a href=event_ics_tracking_link
              i.fa.fa-calendar

    .column-wrapper
      .column-wide.clearfix
        / Show all the presenters
        - cache ["event-presenters-2", page.presenters] do
          - if page.presenters.present?
            / Split the presenters into two groups if there are more than 5
            - if page.presenters.length > 6
              .event__presenters.event__presenters--long
                h2.event__presenters-header Who?
                - page.presenters.in_groups(2, false).each do |group|
                  - if group.present?
                    .event__presenters-group
                      - group.each do |presenter|
                        = render "partials/presenter_horizontal", presenter: presenter
            - else
              .event__presenters
                h2.event__presenters-header Who?
                - page.presenters.each do |presenter|
                  = render "partials/presenter_horizontal", presenter: presenter
        - cache ["event-ticketing-1", page, settings_page.fields[:events_cancelled_message], bookings_open(page)] do
          - if page.upcoming?
            - if page.fields[:ticketing_stage].value == "Cancelled"
              .event__tickets
                h2.event__tickets-header How much?
                .event__tickets-summary.copy
                  - if settings_page.fields[:events_cancelled_message].data_present?
                    = render_content settings_page.fields[:events_cancelled_message]
                  - else
                    p This event has been cancelled.
            - elsif bookings_open(page)
              .event__tickets itemprop="tickets" itemscope=true itemtype="http://data-vocabulary.org/Offer"
                h2.event__tickets-header How much?
                .event__tickets-summary.copy
                  p
                    span.event__tickets-booking-text
                      - if page.fields[:ticket_prices].data_present?
                        = page.fields[:ticket_prices].value
                      - else
                        strong This is a free event.
                        '  Bookings are recommended.
                    - if page.booked_out?
                      span.event__booked-out-flag Booked out
                    - elsif page.fields[:external_bookings].data_present?
                      a.event__tickets-booking itemprop="offerurl" href=page.fields[:external_bookings].value
                        ' Book now
            - elsif page.fields[:bookings_open_at].data_present?
              .event__tickets
                h2.event__tickets-header How much?
                .event__tickets-summary.copy
                  p
                    ' Tickets for this event will be available from
                    em= I18n.l(page.fields[:bookings_open_at].value, format: :time_only)
                    '  on
                    em= I18n.l(page.fields[:bookings_open_at].value, format: :medium_date)
                    '.


        - cache ["event-series-summary-1", page, page.series] do
          - if page.series
            .event__series-summary
              h2.event__series-summary-header
                a href=page.series.absolute_url = page.series.title
              - if page.series.fields[:body].data_present?
                .event__series-summary-details.copy
                  = render_content page.series.fields[:body], {image: {version: :content_small, class: "event__series-summary-image"}}
              - if page.secondary_series
                hr.event__series-secondary-summary-rule
                - page.secondary_series.each do |series|
                  h3.event__series-secondary-summary-header
                    a href=series.absolute_url = series.title
                  .event__series-summary-details.copy
                    - if series.fields[:summary].data_present?
                      = render_content series.fields[:summary]
                    - elsif series.fields[:body].data_present?
                       = force_excerptify_html render_content(series.fields[:body])
    - cache ["event-venue-1", page, page.venue] do
      - if page.venue
        .event__venue data-view-event-venue-map=page.venue.map_data
          .event__venue-info.column-wrapper
            .column-wide.clearfix
              h3.event__venue-header Where?
              .event__venue-more.copy
                a href=page.venue.absolute_url More about this venue
                ', including large map, parking, public transport and accessibility.
          .venue-map__wrapper itemscope=true itemtype="http://data-vocabulary.org/Organization"
            .venue-map__map data-map=true
            .column-wrapper
              .column-wide
                - venue_image = page.venue.fields[:hero_image].assets.first if page.venue.fields[:hero_image].data_present?
                a.venue-map__panel class=("venue-map__panel--with-image" if venue_image) href=page.venue.absolute_url
                  - if venue_image
                    img.venue-map__panel-image itemprop="photo" src=venue_image.content_thumbnail_url
                  h4 itemprop="name"= page.venue.title
                  p itemprop="address" itemscope=true itemtype="http://data-vocabulary.org/Address"
                    = render_content page.venue.fields[:address_formatted]

    / Show the sponsors
    - cache ["event-sponsors-1", page, page.fields[:sponsors].pages] do
      - if page.fields[:sponsors].data_present?
        .event__supporters.column-wrapper
          .column-large
            .event__supporters-intro.copy
              - if page.fields[:sponsors_intro].data_present?
                = render_content page.fields[:sponsors_intro]
              - else
                p Presented in partnership with
            .event__supporters-list data-view-grouper={elementsSelector: ".event__supporters-item", perGroup: { default: 5, "tablet-wide" => 4, tablet: 3, "phone-wide" => 3, phone: 2 }}.to_json
              - page.fields[:sponsors].pages.each do |sponsor|
                - if sponsor.fields[:url].data_present?
                  a.event__supporters-item href=sponsor.fields[:url].value
                    - if sponsor.fields[:logo].data_present?
                      - sponsor_image = sponsor.fields[:logo].assets.first
                    - if sponsor_image
                      img.event__supporters-image src=sponsor_image.content_small_url
                    - else
                      = sponsor.title
                - else
                  .event__supporters-item
                    - if sponsor.fields[:logo].data_present?
                      - sponsor_image = sponsor.fields[:logo].assets.first
                    - if sponsor_image
                      img.event__supporters-image src=sponsor_image.content_small_url
                    - else
                      = sponsor.title
    - cache ["event-comments-1", page.fields[:flarum_discussion_id]] do
      - if page.fields[:flarum_discussion_id].data_present?
        .event__comments.column-wrapper
          .column-mid.clearfix
            = render partial: "partials/flarum_discussion", locals: {flarum_discussion_id: page.fields[:flarum_discussion_id].value }
    / Show related events
    - cache ["event-related-1", page, page.related_events, page.fields[:sponsors].pages] do
      - if page.related_events.present?
        .event__related.column-wrapper class=("gradient-top-down" if page.fields[:sponsors].data_present?)
          .section-header
            h2 Related events
          .column-full
            .snap-wrapper.clearfix data-view-grouper={elementsSelector: ".snap-block", perGroup: { default: 4, "widescreen-wide" => 6, tablet: 3, "phone-wide" => 2, phone: 2 }}.to_json
              - page.related_events.each do |post|
                = render "partials/event_snap_block", post: post, show_type: true
            / - if page.series
            /   a.block-link href=page.series.absolute_url
            /     ' View all the events in
            /     em = page.series.title
            /     '  &rsaquo;
