- posts = page.posts(per_page: 6).results
- blog_archive_rss_tracking_link = track_event("#{url_with_domain(blog_archive_page.absolute_url)}.rss", { \
  category: "rss", \
  action: "subscribe", \
  title: "RSS: #{blog_archive_page.title}" \
})

= area :head do
  link href=blog_archive_rss_tracking_link rel="alternate" title="Notes from The Wheeler Centre" type="application/rss+xml"

= area :masthead_title do
  = blog_page.title

= area :masthead_contextual_navigation do
  - pages = [page] + page.children.in_order.visible.published.where(collection_id: nil)
  = render "partials/masthead_contextual_navigation", pages: pages, current: page

= area :main do
  .blog-index
    - cache ["blog-index-intro-1", page] do
      - if page.fields[:intro].data_present?
        .intro.blog-index__intro.column-wrapper
          .column-narrow.copy
            = render_content page.fields[:intro]
    .blog-index__latest.column-wrapper
      h2.blog-index__latest-header Latest notes
      - if posts.present?
        .column-wide
          .snap-uneven.snap-wrapper.clearfix data-view-grouper={elementsSelector: ".snap-block", fillGroups: true, perGroup: { default: 3, phone: 2 }}.to_json
            - posts.each do |post|
              = render "partials/blog_snap_block", post: post, show_type: false, aspect: :landscape, show_summary: true
          a.block-link.blog-index__latest-more href=blog_archive_page.absolute_url There are more notes over here on page two &#8230; &rsaquo;

    / Content area
    - cache ["blog-index-middle-1", page] do
      - if page.fields[:middle].data_present?
        .content-block
          = render_content_in_sections page.fields[:middle]

    - if page.fields[:highlighted_authors].data_present?
      .blog-index__guest-authors.column-wrapper
        .column-wide
          .section-header
            - if page.fields[:highlighted_authors_title].data_present?
              h2 = markdown_line page.fields[:highlighted_authors_title].value
            - if page.fields[:highlighted_authors_intro].data_present?
            .intro.intro--small.column-narrow.copy
              = render_content page.fields[:highlighted_authors_intro]
          .blog-index__guest-authors-inner.snap-wrapper.clearfix data-view-grouper={elementsSelector: ".snap-block", perGroup: { default: 4, "widescreen-wide" => 4, widescreen: 4, tablet: 3, "phone-wide" => 2, phone: 1 }, fillGroups: true}.to_json
            - page.fields[:highlighted_authors].pages.each do |guest_author|
              - author_posts = guest_author.blog_posts(per_page: 3)
              - if author_posts.present?
                .snap-block.guest-author
                  - if guest_author.fields[:portrait].data_present?
                    - image = guest_author.fields[:portrait].asset
                  - cache ["blog-index-author-details-3", guest_author, image] do
                    - if image
                      .author-image
                        .author-image__inner
                          img src=image.content_thumbnail_url
                    h3.guest-author__title
                      = guest_author.title
                    - if guest_author.fields[:intro].data_present?
                      .guest-author__intro.copy
                        = force_excerptify_html render_content(guest_author.fields[:intro]), 25
                  ul.blog-post-list
                    - author_posts.each do |post|
                      - cache ["blog-index-author-posts-1", post] do
                        li
                          a.blog-post-list__anchor href=post.absolute_url
                            h3.blog-post-list__title
                              span.title-text == widont_format markdown_line post.title
                              - first_topic = post.fields[:topics].pages.first if post.fields[:topics].data_present?
                              - if first_topic.present?
                                span.title-tags
                                  '  &nbsp;/&nbsp;
                                  = first_topic.title
    / Content area
    - cache ["blog-index-end-1", page] do
      - if page.fields[:end].data_present?
        .content-block
          = render_content_in_sections page.fields[:end]

    = render "partials/topics_section"
