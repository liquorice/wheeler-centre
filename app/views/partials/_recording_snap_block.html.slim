- show_summary = show_summary || false
- show_type = show_type || false
- aspect = aspect || :square
- if post.fields[:hero_image].data_present?
  - image = post.fields[:hero_image].asset
- first_topic = post.fields[:topics].pages.first if post.fields[:topics].data_present?

- cache ["recording-snap-block-3", post, show_type, show_summary, image, post.fields[:people].pages, first_topic, aspect] do
  .snap-block
    a.recording-snap.recording-snap-block href=post.absolute_url
      / If we don't have hero images for recordings (which is most of the old ones)
      / we want to use the YouTube thumbnail instead
      - if image
        .recording-snap__hero
          - if show_type
            span.recording-snap__hero-type
              i.fa.fa-play
          .recording-snap__hero-inner
            - image_url = (aspect == :square) ? image.content_thumbnail_url : image.content_small_thumbnail_url
            img src=image_url alt=(image.description.present? ? image.description : "Promo image for #{post.title}")
      / We have to differentiate because YouTube images are different sizes
      - elsif post.fields[:youtube_video].data_present?
        .recording-snap__hero class="recording-snap__hero--force-#{aspect.to_s}"
          .recording-snap__hero-shim
          - if show_type
            span.recording-snap__hero-type
              i.fa.fa-play
          .recording-snap__hero-inner
            img src=post.youtube_thumbnail_url

      h3.recording-snap__title
        span.title-text == widont_format markdown_line post.title
        - if post.fields[:topics].data_present?
          span.title-tags
            '  &nbsp;/&nbsp;
            = post.fields[:topics].pages.first.title
      - if post.fields[:people].data_present?
        p.recording-snap__authors
          ' With
          - if post.fields[:people].pages.length > 3
            = post.fields[:people].pages[0..2].map(&:title).join(", ")
            '  and
            = pluralize(post.fields[:people].pages.length-3, "other")
          - else
            = post.fields[:people].pages.map(&:title).to_sentence
      - if show_summary && post.fields[:description].data_present?
          .recording-snap-block__summary.snap-block__summary.copy
            .recording-snap-block__summary-inner.snap-block__summary-inner.copy
              = force_excerptify_html render_content(post.fields[:description]), 60, "p i em strong br"
